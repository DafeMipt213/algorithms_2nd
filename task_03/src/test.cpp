#include <gtest/gtest.h>

#include "Deijkstra.hpp"
#include "Johnson.hpp"

TEST(Jonson, Test1) {
  std::vector<edge> edges = {{0, 1, -1}, {0, 2, 4}, {1, 2, 3}, {1, 3, 2},
                             {1, 4, 2},  {3, 2, 5}, {3, 1, 1}, {4, 3, -3}};
  std::vector<std::vector<int>> d = Johnson(edges, 8, 5);
  std::vector<std::vector<int>> result = {
      {0, 1, 2, 1, 1},
      {1000000000, 0, 1, 0, 0},
      {1000000000, 1000000000, 0, 1000000000, 1000000000},
      {1000000000, 0, 1, 0, 0},
      {1000000000, 0, 1, 0, 0}};
  ASSERT_EQ(d, result);
}

TEST(Jonson, NegativeCycle) {
  std::vector<edge> edges = {{0, 5, 1}, {1, 0, 1}, {2, 1, 1},   {2, 3, 1},
                             {3, 4, 1}, {4, 5, 1}, {5, 5, -10}, {5, 2, 3}};
  ASSERT_ANY_THROW(Johnson(edges, 8, 5));
}

TEST(Jonson, Test2) {
  std::vector<edge> edges = {{0, 1, 1},  {0, 2, -2}, {1, 3, 10}, {3, 6, 1},
                             {1, 6, -3}, {6, 2, 5},  {2, 5, -1}, {2, 4, 2},
                             {5, 4, 2},  {6, 7, 10}, {5, 7, -3}};
  std::vector<std::vector<int>> d = Johnson(edges, 11, 8);
  std::vector<std::vector<int>> result = {
      {0, 1, 0, 11, 0, 0, 1, 0},
      {1000000000, 0, 4, 10, 4, 4, 0, 4},
      {1000000000, 1000000000, 0, 1000000000, 0, 0, 1000000000, 0},
      {1000000000, 1000000000, 8, 0, 8, 8, 4, 8},
      {1000000000, 1000000000, 1000000000, 1000000000, 0, 1000000000,
       1000000000, 1000000000},
      {1000000000, 1000000000, 1000000000, 1000000000, 0, 0, 1000000000, 0},
      {1000000000, 1000000000, 4, 1000000000, 4, 4, 0, 4},
      {1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000,
       1000000000, 0}};
  ASSERT_EQ(d, result);
}